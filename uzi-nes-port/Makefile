CA := ca65
CC := cc65
LD := ld65

CAFLAGS := --include-dir include/asm

PLATFORM := uzi

TARGET := uzi.nes
LINKER_SCRIPT := scripts/linker/uzi.cfg

KERNEL_OBJS := head.o kernel.o process.o kdata.o
KERNEL_OBJ_DIR := kernel
KERNEL_DEPS := $(patsubst %, $(KERNEL_OBJ_DIR)/%, $(KERNEL_OBJS))

PPU_OBJS := ppu.o
PPU_OBJ_DIR := ppu
PPU_DEPS := $(patsubst %, $(PPU_OBJ_DIR)/%, $(PPU_OBJS))

DRIVER_OBJS := devio.o
DRIVER_OBJ_DIR := drivers
DRIVER_DEPS := $(patsubst %, $(DRIVER_OBJ_DIR)/%, $(DRIVER_OBJS))

LIB_OBJS := string.o
LIB_OBJ_DIR := lib
LIB_DEPS := $(patsubst %, $(LIB_OBJ_DIR)/%, $(LIB_OBJS))

ALL_DEPS := $(KERNEL_DEPS) $(PPU_DEPS) $(DRIVER_DEPS)
ALL_EXTRA := $(patsubst %.o, %.s, $(ALL_DEPS))

.PRECIOUS: %.s %.o
.SUFFIXES:

all: $(TARGET)

%.s: %.c
	@echo "Building .c to .s $<"
	$(CC) --target $(PLATFORM) -I$(CC65_DIR)/include/ -I$(PWD)/include/ -O $<

%.o: %.S
	@echo "Building .S $<"
	$(CA) $(CAFLAGS) -o $@ $<

%.o: %.s
        # Note that we don't include CAFLAGS here, since .s files are generated by
        # the compiler.  We don't want to pollute the build with anything more than
        # necessary here.
	@echo "Building .s $<"
	$(CA) -o $@ $<

$(TARGET): $(ALL_DEPS) $(LINKER_SCRIPT)
	$(LD) -v -m link.map -C $(LINKER_SCRIPT) -o $@ $(ALL_DEPS) uzi.lib

clean:
	rm -f $(ALL_DEPS) $(ALL_EXTRA) uzi.nes link.map

